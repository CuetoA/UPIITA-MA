
P7-pwm-correct-phase.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000392  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000392  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000d8  00000000  00000000  000003c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001cfe  00000000  00000000  00000499  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000770  00000000  00000000  00002197  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000008bc  00000000  00000000  00002907  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000025c  00000000  00000000  000031c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000211  00000000  00000000  00003420  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000012fa  00000000  00000000  00003631  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c8  00000000  00000000  0000492b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000033a  0000033a  0000038e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000049f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.ENVIA_CMD 0000006e  00000194  00000194  000001e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.LCD_INICIALIZA 00000026  0000030c  0000030c  00000360  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ENVIA_DATO 0000006e  00000202  00000202  00000256  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ENVIA_CADENA 00000040  000002cc  000002cc  00000320  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LIMPIA_LCD 00000008  00000332  00000332  00000386  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000005c  00000270  00000270  000002c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 00000016  00000080  00000080  000000d4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.__vector_1 00000080  00000096  00000096  000000ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_2 0000007e  00000116  00000116  0000016a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__vector_1>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_2>
   c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  10:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  14:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  18:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  1c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  20:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  24:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  28:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  2c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  30:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  34:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  38:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  3c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  40:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  44:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  48:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  4c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  50:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  54:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  58:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  5c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  60:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
  64:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 38 01 	call	0x270	; 0x270 <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

0000033a <__bad_interrupt>:
 33a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ENVIA_CMD:

00000194 <ENVIA_CMD>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 194:	98 2f       	mov	r25, r24
 196:	90 7f       	andi	r25, 0xF0	; 240
 198:	96 95       	lsr	r25
 19a:	96 95       	lsr	r25
 19c:	98 b9       	out	0x08, r25	; 8
 19e:	98 b1       	in	r25, 0x08	; 8
 1a0:	9e 7f       	andi	r25, 0xFE	; 254
 1a2:	98 b9       	out	0x08, r25	; 8
 1a4:	98 b1       	in	r25, 0x08	; 8
 1a6:	92 60       	ori	r25, 0x02	; 2
 1a8:	98 b9       	out	0x08, r25	; 8
 1aa:	ef e9       	ldi	r30, 0x9F	; 159
 1ac:	ff e0       	ldi	r31, 0x0F	; 15
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <ENVIA_CMD+0x1a>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <ENVIA_CMD+0x20>
 1b4:	00 00       	nop
 1b6:	98 b1       	in	r25, 0x08	; 8
 1b8:	9d 7f       	andi	r25, 0xFD	; 253
 1ba:	98 b9       	out	0x08, r25	; 8
 1bc:	ef e3       	ldi	r30, 0x3F	; 63
 1be:	fc e9       	ldi	r31, 0x9C	; 156
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <ENVIA_CMD+0x2c>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <ENVIA_CMD+0x32>
 1c6:	00 00       	nop
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	8c 73       	andi	r24, 0x3C	; 60
 1d4:	88 b9       	out	0x08, r24	; 8
 1d6:	88 b1       	in	r24, 0x08	; 8
 1d8:	8e 7f       	andi	r24, 0xFE	; 254
 1da:	88 b9       	out	0x08, r24	; 8
 1dc:	88 b1       	in	r24, 0x08	; 8
 1de:	82 60       	ori	r24, 0x02	; 2
 1e0:	88 b9       	out	0x08, r24	; 8
 1e2:	8f e9       	ldi	r24, 0x9F	; 159
 1e4:	9f e0       	ldi	r25, 0x0F	; 15
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <ENVIA_CMD+0x52>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <ENVIA_CMD+0x58>
 1ec:	00 00       	nop
 1ee:	88 b1       	in	r24, 0x08	; 8
 1f0:	8d 7f       	andi	r24, 0xFD	; 253
 1f2:	88 b9       	out	0x08, r24	; 8
 1f4:	ef e3       	ldi	r30, 0x3F	; 63
 1f6:	fc e9       	ldi	r31, 0x9C	; 156
 1f8:	31 97       	sbiw	r30, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <ENVIA_CMD+0x64>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <ENVIA_CMD+0x6a>
 1fe:	00 00       	nop
 200:	08 95       	ret

Disassembly of section .text.LCD_INICIALIZA:

0000030c <LCD_INICIALIZA>:
}


void LCD_INICIALIZA()
{
	ENVIA_CMD(0x02);
 30c:	82 e0       	ldi	r24, 0x02	; 2
 30e:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
	ENVIA_CMD(0x28); // 00101000 DL = 0 comunicacion de 4 bits N = 1 F = 0
 312:	88 e2       	ldi	r24, 0x28	; 40
 314:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
	ENVIA_CMD(0x0E); // D=1 Display ON Cursor OFF
 318:	8e e0       	ldi	r24, 0x0E	; 14
 31a:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
	ENVIA_CMD(0x06); // I/D = 1 Incremento Automatico S=0
 31e:	86 e0       	ldi	r24, 0x06	; 6
 320:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
	ENVIA_CMD(0x01);  // Limpia LCD
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
	ENVIA_CMD(0X80);
 32a:	80 e8       	ldi	r24, 0x80	; 128
 32c:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
 330:	08 95       	ret

Disassembly of section .text.ENVIA_DATO:

00000202 <ENVIA_DATO>:
 202:	98 2f       	mov	r25, r24
 204:	90 7f       	andi	r25, 0xF0	; 240
 206:	96 95       	lsr	r25
 208:	96 95       	lsr	r25
 20a:	98 b9       	out	0x08, r25	; 8
 20c:	98 b1       	in	r25, 0x08	; 8
 20e:	93 60       	ori	r25, 0x03	; 3
 210:	98 b9       	out	0x08, r25	; 8
 212:	ef e9       	ldi	r30, 0x9F	; 159
 214:	ff e0       	ldi	r31, 0x0F	; 15
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <ENVIA_DATO+0x14>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <ENVIA_DATO+0x1a>
 21c:	00 00       	nop
 21e:	98 b1       	in	r25, 0x08	; 8
 220:	9d 7f       	andi	r25, 0xFD	; 253
 222:	98 b9       	out	0x08, r25	; 8
 224:	98 b1       	in	r25, 0x08	; 8
 226:	9e 7f       	andi	r25, 0xFE	; 254
 228:	98 b9       	out	0x08, r25	; 8
 22a:	ef e3       	ldi	r30, 0x3F	; 63
 22c:	fc e9       	ldi	r31, 0x9C	; 156
 22e:	31 97       	sbiw	r30, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <ENVIA_DATO+0x2c>
 232:	00 c0       	rjmp	.+0      	; 0x234 <ENVIA_DATO+0x32>
 234:	00 00       	nop
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	8c 73       	andi	r24, 0x3C	; 60
 242:	88 b9       	out	0x08, r24	; 8
 244:	88 b1       	in	r24, 0x08	; 8
 246:	83 60       	ori	r24, 0x03	; 3
 248:	88 b9       	out	0x08, r24	; 8
 24a:	8f e9       	ldi	r24, 0x9F	; 159
 24c:	9f e0       	ldi	r25, 0x0F	; 15
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <ENVIA_DATO+0x4c>
 252:	00 c0       	rjmp	.+0      	; 0x254 <ENVIA_DATO+0x52>
 254:	00 00       	nop
 256:	88 b1       	in	r24, 0x08	; 8
 258:	8d 7f       	andi	r24, 0xFD	; 253
 25a:	88 b9       	out	0x08, r24	; 8
 25c:	88 b1       	in	r24, 0x08	; 8
 25e:	8e 7f       	andi	r24, 0xFE	; 254
 260:	88 b9       	out	0x08, r24	; 8
 262:	ef e3       	ldi	r30, 0x3F	; 63
 264:	fc e9       	ldi	r31, 0x9C	; 156
 266:	31 97       	sbiw	r30, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <ENVIA_DATO+0x64>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <ENVIA_DATO+0x6a>
 26c:	00 00       	nop
 26e:	08 95       	ret

Disassembly of section .text.ENVIA_CADENA:

000002cc <ENVIA_CADENA>:
	_delay_ms(10);
	return;
}

void ENVIA_CADENA(const char *dato)
{
 2cc:	cf 92       	push	r12
 2ce:	df 92       	push	r13
 2d0:	ef 92       	push	r14
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	6b 01       	movw	r12, r22
 2d8:	e8 2e       	mov	r14, r24
	int i;
	for(i=0;dato[i]!='\0';i++)
 2da:	c0 e0       	ldi	r28, 0x00	; 0
 2dc:	d0 e0       	ldi	r29, 0x00	; 0
 2de:	03 c0       	rjmp	.+6      	; 0x2e6 <ENVIA_CADENA+0x1a>
	ENVIA_DATO(dato[i]);
 2e0:	0e 94 01 01 	call	0x202	; 0x202 <ENVIA_DATO>
}

void ENVIA_CADENA(const char *dato)
{
	int i;
	for(i=0;dato[i]!='\0';i++)
 2e4:	21 96       	adiw	r28, 0x01	; 1
 2e6:	ae 2d       	mov	r26, r14
 2e8:	c6 01       	movw	r24, r12
 2ea:	8c 0f       	add	r24, r28
 2ec:	9d 1f       	adc	r25, r29
 2ee:	a1 1d       	adc	r26, r1
 2f0:	d7 fd       	sbrc	r29, 7
 2f2:	aa 95       	dec	r26
 2f4:	fc 01       	movw	r30, r24
 2f6:	84 91       	lpm	r24, Z
 2f8:	a7 fd       	sbrc	r26, 7
 2fa:	80 81       	ld	r24, Z
 2fc:	81 11       	cpse	r24, r1
 2fe:	f0 cf       	rjmp	.-32     	; 0x2e0 <ENVIA_CADENA+0x14>
	ENVIA_DATO(dato[i]);
}
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	ef 90       	pop	r14
 306:	df 90       	pop	r13
 308:	cf 90       	pop	r12
 30a:	08 95       	ret

Disassembly of section .text.LIMPIA_LCD:

00000332 <LIMPIA_LCD>:

void LIMPIA_LCD()
{
	ENVIA_CMD(0x1);   //0000 0001
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 ca 00 	call	0x194	; 0x194 <ENVIA_CMD>
 338:	08 95       	ret

Disassembly of section .text.main:

00000270 <main>:
 270:	1a b8       	out	0x0a, r1	; 10
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	8b b9       	out	0x0b, r24	; 11
 276:	87 b9       	out	0x07, r24	; 7
 278:	0e 94 86 01 	call	0x30c	; 0x30c <LCD_INICIALIZA>
 27c:	2f ef       	ldi	r18, 0xFF	; 255
 27e:	89 ef       	ldi	r24, 0xF9	; 249
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	21 50       	subi	r18, 0x01	; 1
 284:	80 40       	sbci	r24, 0x00	; 0
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <main+0x12>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0x1c>
 28c:	00 00       	nop
 28e:	81 e8       	ldi	r24, 0x81	; 129
 290:	83 bd       	out	0x23, r24	; 35
 292:	88 ec       	ldi	r24, 0xC8	; 200
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 29a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 29e:	82 e0       	ldi	r24, 0x02	; 2
 2a0:	84 b9       	out	0x04, r24	; 4
 2a2:	81 e4       	ldi	r24, 0x41	; 65
 2a4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 2a8:	83 e0       	ldi	r24, 0x03	; 3
 2aa:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 2ae:	13 bc       	out	0x23, r1	; 35
 2b0:	f8 94       	cli
 2b2:	e9 e6       	ldi	r30, 0x69	; 105
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	82 60       	ori	r24, 0x02	; 2
 2ba:	80 83       	st	Z, r24
 2bc:	80 81       	ld	r24, Z
 2be:	8c 60       	ori	r24, 0x0C	; 12
 2c0:	80 83       	st	Z, r24
 2c2:	8d b3       	in	r24, 0x1d	; 29
 2c4:	83 60       	ori	r24, 0x03	; 3
 2c6:	8d bb       	out	0x1d, r24	; 29
 2c8:	78 94       	sei
 2ca:	ff cf       	rjmp	.-2      	; 0x2ca <main+0x5a>

Disassembly of section .text.__vector_1:

00000096 <__vector_1>:
  96:	1f 92       	push	r1
  98:	0f 92       	push	r0
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	0f 92       	push	r0
  9e:	11 24       	eor	r1, r1
  a0:	2f 93       	push	r18
  a2:	3f 93       	push	r19
  a4:	4f 93       	push	r20
  a6:	5f 93       	push	r21
  a8:	6f 93       	push	r22
  aa:	7f 93       	push	r23
  ac:	8f 93       	push	r24
  ae:	9f 93       	push	r25
  b0:	af 93       	push	r26
  b2:	bf 93       	push	r27
  b4:	ef 93       	push	r30
  b6:	ff 93       	push	r31
  b8:	60 e8       	ldi	r22, 0x80	; 128
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	0e 94 66 01 	call	0x2cc	; 0x2cc <ENVIA_CADENA>
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	83 ed       	ldi	r24, 0xD3	; 211
  c6:	90 e3       	ldi	r25, 0x30	; 48
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <__vector_1+0x32>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <__vector_1+0x3c>
  d2:	00 00       	nop
  d4:	0e 94 99 01 	call	0x332	; 0x332 <LIMPIA_LCD>
  d8:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  dc:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  e0:	80 3f       	cpi	r24, 0xF0	; 240
  e2:	91 05       	cpc	r25, r1
  e4:	38 f4       	brcc	.+14     	; 0xf4 <__vector_1+0x5e>
  e6:	e8 e8       	ldi	r30, 0x88	; 136
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	91 81       	ldd	r25, Z+1	; 0x01
  ee:	0a 96       	adiw	r24, 0x0a	; 10
  f0:	91 83       	std	Z+1, r25	; 0x01
  f2:	80 83       	st	Z, r24
  f4:	ff 91       	pop	r31
  f6:	ef 91       	pop	r30
  f8:	bf 91       	pop	r27
  fa:	af 91       	pop	r26
  fc:	9f 91       	pop	r25
  fe:	8f 91       	pop	r24
 100:	7f 91       	pop	r23
 102:	6f 91       	pop	r22
 104:	5f 91       	pop	r21
 106:	4f 91       	pop	r20
 108:	3f 91       	pop	r19
 10a:	2f 91       	pop	r18
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	0f 90       	pop	r0
 112:	1f 90       	pop	r1
 114:	18 95       	reti

Disassembly of section .text.__vector_2:

00000116 <__vector_2>:
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	af 93       	push	r26
 132:	bf 93       	push	r27
 134:	ef 93       	push	r30
 136:	ff 93       	push	r31
 138:	6b e8       	ldi	r22, 0x8B	; 139
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	0e 94 66 01 	call	0x2cc	; 0x2cc <ENVIA_CADENA>
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	83 ed       	ldi	r24, 0xD3	; 211
 146:	90 e3       	ldi	r25, 0x30	; 48
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <__vector_2+0x32>
 150:	00 c0       	rjmp	.+0      	; 0x152 <__vector_2+0x3c>
 152:	00 00       	nop
 154:	0e 94 99 01 	call	0x332	; 0x332 <LIMPIA_LCD>
 158:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 15c:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 160:	0b 97       	sbiw	r24, 0x0b	; 11
 162:	38 f0       	brcs	.+14     	; 0x172 <__vector_2+0x5c>
 164:	e8 e8       	ldi	r30, 0x88	; 136
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	91 81       	ldd	r25, Z+1	; 0x01
 16c:	0a 97       	sbiw	r24, 0x0a	; 10
 16e:	91 83       	std	Z+1, r25	; 0x01
 170:	80 83       	st	Z, r24
 172:	ff 91       	pop	r31
 174:	ef 91       	pop	r30
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	7f 91       	pop	r23
 180:	6f 91       	pop	r22
 182:	5f 91       	pop	r21
 184:	4f 91       	pop	r20
 186:	3f 91       	pop	r19
 188:	2f 91       	pop	r18
 18a:	0f 90       	pop	r0
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	0f 90       	pop	r0
 190:	1f 90       	pop	r1
 192:	18 95       	reti
