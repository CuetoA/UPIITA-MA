
P7-pwm-correct-phase.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000003c0  00000434  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000d8  00000000  00000000  00000463  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001d29  00000000  00000000  0000053b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000769  00000000  00000000  00002264  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000008c8  00000000  00000000  000029cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000025c  00000000  00000000  00003298  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000211  00000000  00000000  000034f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000012fa  00000000  00000000  00003705  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c8  00000000  00000000  000049ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000003b8  000003b8  0000042c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.ENVIA_CMD 0000006e  00000204  00000204  00000278  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.LCD_INICIALIZA 00000026  0000038a  0000038a  000003fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ENVIA_DATO 0000006e  00000272  00000272  000002e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ENVIA_CADENA 00000040  0000034a  0000034a  000003be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LIMPIA_LCD 00000008  000003b0  000003b0  00000424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000006a  000002e0  000002e0  00000354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 0000001e  000000c4  000000c4  00000138  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.__vector_1 00000096  000000e2  000000e2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_2 0000008c  00000178  00000178  000001ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .data.limit   00000002  00800100  000003bc  00000430  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data.step    00000002  00800102  000003be  00000432  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__vector_1>
   8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__vector_2>
   c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  10:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  14:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  18:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  1c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  20:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  24:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  28:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  2c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  30:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  34:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  38:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  3c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  40:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  44:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  48:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  4c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  50:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  54:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  58:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  5c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  60:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>
  64:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 04       	cpc	r0, r1
  6c:	00 03       	mulsu	r16, r16
  6e:	bc 00       	.word	0x00bc	; ????

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d8 e0       	ldi	r29, 0x08	; 8
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	e8 e6       	ldi	r30, 0x68	; 104
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	40 e0       	ldi	r20, 0x00	; 0
  82:	17 c0       	rjmp	.+46     	; 0xb2 <__do_clear_bss+0x8>
  84:	b5 91       	lpm	r27, Z+
  86:	a5 91       	lpm	r26, Z+
  88:	35 91       	lpm	r19, Z+
  8a:	25 91       	lpm	r18, Z+
  8c:	05 91       	lpm	r16, Z+
  8e:	07 fd       	sbrc	r16, 7
  90:	0c c0       	rjmp	.+24     	; 0xaa <__do_clear_bss>
  92:	95 91       	lpm	r25, Z+
  94:	85 91       	lpm	r24, Z+
  96:	ef 01       	movw	r28, r30
  98:	f9 2f       	mov	r31, r25
  9a:	e8 2f       	mov	r30, r24
  9c:	05 90       	lpm	r0, Z+
  9e:	0d 92       	st	X+, r0
  a0:	a2 17       	cp	r26, r18
  a2:	b3 07       	cpc	r27, r19
  a4:	d9 f7       	brne	.-10     	; 0x9c <__do_copy_data+0x20>
  a6:	fe 01       	movw	r30, r28
  a8:	04 c0       	rjmp	.+8      	; 0xb2 <__do_clear_bss+0x8>

000000aa <__do_clear_bss>:
  aa:	1d 92       	st	X+, r1
  ac:	a2 17       	cp	r26, r18
  ae:	b3 07       	cpc	r27, r19
  b0:	e1 f7       	brne	.-8      	; 0xaa <__do_clear_bss>
  b2:	ef 36       	cpi	r30, 0x6F	; 111
  b4:	f4 07       	cpc	r31, r20
  b6:	31 f7       	brne	.-52     	; 0x84 <__do_copy_data+0x8>
  b8:	0e 94 70 01 	call	0x2e0	; 0x2e0 <main>
  bc:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>

Disassembly of section .text:

000003b8 <__bad_interrupt>:
 3b8:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ENVIA_CMD:

00000204 <ENVIA_CMD>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 204:	98 2f       	mov	r25, r24
 206:	90 7f       	andi	r25, 0xF0	; 240
 208:	96 95       	lsr	r25
 20a:	96 95       	lsr	r25
 20c:	98 b9       	out	0x08, r25	; 8
 20e:	98 b1       	in	r25, 0x08	; 8
 210:	9e 7f       	andi	r25, 0xFE	; 254
 212:	98 b9       	out	0x08, r25	; 8
 214:	98 b1       	in	r25, 0x08	; 8
 216:	92 60       	ori	r25, 0x02	; 2
 218:	98 b9       	out	0x08, r25	; 8
 21a:	ef e9       	ldi	r30, 0x9F	; 159
 21c:	ff e0       	ldi	r31, 0x0F	; 15
 21e:	31 97       	sbiw	r30, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <ENVIA_CMD+0x1a>
 222:	00 c0       	rjmp	.+0      	; 0x224 <ENVIA_CMD+0x20>
 224:	00 00       	nop
 226:	98 b1       	in	r25, 0x08	; 8
 228:	9d 7f       	andi	r25, 0xFD	; 253
 22a:	98 b9       	out	0x08, r25	; 8
 22c:	ef e3       	ldi	r30, 0x3F	; 63
 22e:	fc e9       	ldi	r31, 0x9C	; 156
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <ENVIA_CMD+0x2c>
 234:	00 c0       	rjmp	.+0      	; 0x236 <ENVIA_CMD+0x32>
 236:	00 00       	nop
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	8c 73       	andi	r24, 0x3C	; 60
 244:	88 b9       	out	0x08, r24	; 8
 246:	88 b1       	in	r24, 0x08	; 8
 248:	8e 7f       	andi	r24, 0xFE	; 254
 24a:	88 b9       	out	0x08, r24	; 8
 24c:	88 b1       	in	r24, 0x08	; 8
 24e:	82 60       	ori	r24, 0x02	; 2
 250:	88 b9       	out	0x08, r24	; 8
 252:	8f e9       	ldi	r24, 0x9F	; 159
 254:	9f e0       	ldi	r25, 0x0F	; 15
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <ENVIA_CMD+0x52>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <ENVIA_CMD+0x58>
 25c:	00 00       	nop
 25e:	88 b1       	in	r24, 0x08	; 8
 260:	8d 7f       	andi	r24, 0xFD	; 253
 262:	88 b9       	out	0x08, r24	; 8
 264:	ef e3       	ldi	r30, 0x3F	; 63
 266:	fc e9       	ldi	r31, 0x9C	; 156
 268:	31 97       	sbiw	r30, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <ENVIA_CMD+0x64>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <ENVIA_CMD+0x6a>
 26e:	00 00       	nop
 270:	08 95       	ret

Disassembly of section .text.LCD_INICIALIZA:

0000038a <LCD_INICIALIZA>:
}


void LCD_INICIALIZA()
{
	ENVIA_CMD(0x02);
 38a:	82 e0       	ldi	r24, 0x02	; 2
 38c:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
	ENVIA_CMD(0x28); // 00101000 DL = 0 comunicacion de 4 bits N = 1 F = 0
 390:	88 e2       	ldi	r24, 0x28	; 40
 392:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
	ENVIA_CMD(0x0E); // D=1 Display ON Cursor OFF
 396:	8e e0       	ldi	r24, 0x0E	; 14
 398:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
	ENVIA_CMD(0x06); // I/D = 1 Incremento Automatico S=0
 39c:	86 e0       	ldi	r24, 0x06	; 6
 39e:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
	ENVIA_CMD(0x01);  // Limpia LCD
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
	ENVIA_CMD(0X80);
 3a8:	80 e8       	ldi	r24, 0x80	; 128
 3aa:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
 3ae:	08 95       	ret

Disassembly of section .text.ENVIA_DATO:

00000272 <ENVIA_DATO>:
 272:	98 2f       	mov	r25, r24
 274:	90 7f       	andi	r25, 0xF0	; 240
 276:	96 95       	lsr	r25
 278:	96 95       	lsr	r25
 27a:	98 b9       	out	0x08, r25	; 8
 27c:	98 b1       	in	r25, 0x08	; 8
 27e:	93 60       	ori	r25, 0x03	; 3
 280:	98 b9       	out	0x08, r25	; 8
 282:	ef e9       	ldi	r30, 0x9F	; 159
 284:	ff e0       	ldi	r31, 0x0F	; 15
 286:	31 97       	sbiw	r30, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <ENVIA_DATO+0x14>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <ENVIA_DATO+0x1a>
 28c:	00 00       	nop
 28e:	98 b1       	in	r25, 0x08	; 8
 290:	9d 7f       	andi	r25, 0xFD	; 253
 292:	98 b9       	out	0x08, r25	; 8
 294:	98 b1       	in	r25, 0x08	; 8
 296:	9e 7f       	andi	r25, 0xFE	; 254
 298:	98 b9       	out	0x08, r25	; 8
 29a:	ef e3       	ldi	r30, 0x3F	; 63
 29c:	fc e9       	ldi	r31, 0x9C	; 156
 29e:	31 97       	sbiw	r30, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <ENVIA_DATO+0x2c>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <ENVIA_DATO+0x32>
 2a4:	00 00       	nop
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	8c 73       	andi	r24, 0x3C	; 60
 2b2:	88 b9       	out	0x08, r24	; 8
 2b4:	88 b1       	in	r24, 0x08	; 8
 2b6:	83 60       	ori	r24, 0x03	; 3
 2b8:	88 b9       	out	0x08, r24	; 8
 2ba:	8f e9       	ldi	r24, 0x9F	; 159
 2bc:	9f e0       	ldi	r25, 0x0F	; 15
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <ENVIA_DATO+0x4c>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <ENVIA_DATO+0x52>
 2c4:	00 00       	nop
 2c6:	88 b1       	in	r24, 0x08	; 8
 2c8:	8d 7f       	andi	r24, 0xFD	; 253
 2ca:	88 b9       	out	0x08, r24	; 8
 2cc:	88 b1       	in	r24, 0x08	; 8
 2ce:	8e 7f       	andi	r24, 0xFE	; 254
 2d0:	88 b9       	out	0x08, r24	; 8
 2d2:	ef e3       	ldi	r30, 0x3F	; 63
 2d4:	fc e9       	ldi	r31, 0x9C	; 156
 2d6:	31 97       	sbiw	r30, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <ENVIA_DATO+0x64>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <ENVIA_DATO+0x6a>
 2dc:	00 00       	nop
 2de:	08 95       	ret

Disassembly of section .text.ENVIA_CADENA:

0000034a <ENVIA_CADENA>:
	_delay_ms(10);
	return;
}

void ENVIA_CADENA(const char *dato)
{
 34a:	cf 92       	push	r12
 34c:	df 92       	push	r13
 34e:	ef 92       	push	r14
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	6b 01       	movw	r12, r22
 356:	e8 2e       	mov	r14, r24
	int i;
	for(i=0;dato[i]!='\0';i++)
 358:	c0 e0       	ldi	r28, 0x00	; 0
 35a:	d0 e0       	ldi	r29, 0x00	; 0
 35c:	03 c0       	rjmp	.+6      	; 0x364 <ENVIA_CADENA+0x1a>
	ENVIA_DATO(dato[i]);
 35e:	0e 94 39 01 	call	0x272	; 0x272 <ENVIA_DATO>
}

void ENVIA_CADENA(const char *dato)
{
	int i;
	for(i=0;dato[i]!='\0';i++)
 362:	21 96       	adiw	r28, 0x01	; 1
 364:	ae 2d       	mov	r26, r14
 366:	c6 01       	movw	r24, r12
 368:	8c 0f       	add	r24, r28
 36a:	9d 1f       	adc	r25, r29
 36c:	a1 1d       	adc	r26, r1
 36e:	d7 fd       	sbrc	r29, 7
 370:	aa 95       	dec	r26
 372:	fc 01       	movw	r30, r24
 374:	84 91       	lpm	r24, Z
 376:	a7 fd       	sbrc	r26, 7
 378:	80 81       	ld	r24, Z
 37a:	81 11       	cpse	r24, r1
 37c:	f0 cf       	rjmp	.-32     	; 0x35e <ENVIA_CADENA+0x14>
	ENVIA_DATO(dato[i]);
}
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	ef 90       	pop	r14
 384:	df 90       	pop	r13
 386:	cf 90       	pop	r12
 388:	08 95       	ret

Disassembly of section .text.LIMPIA_LCD:

000003b0 <LIMPIA_LCD>:

void LIMPIA_LCD()
{
	ENVIA_CMD(0x1);   //0000 0001
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 02 01 	call	0x204	; 0x204 <ENVIA_CMD>
 3b6:	08 95       	ret

Disassembly of section .text.main:

000002e0 <main>:
 2e0:	1a b8       	out	0x0a, r1	; 10
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	8b b9       	out	0x0b, r24	; 11
 2e6:	87 b9       	out	0x07, r24	; 7
 2e8:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_INICIALIZA>
 2ec:	2f ef       	ldi	r18, 0xFF	; 255
 2ee:	89 ef       	ldi	r24, 0xF9	; 249
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	21 50       	subi	r18, 0x01	; 1
 2f4:	80 40       	sbci	r24, 0x00	; 0
 2f6:	90 40       	sbci	r25, 0x00	; 0
 2f8:	e1 f7       	brne	.-8      	; 0x2f2 <main+0x12>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <main+0x1c>
 2fc:	00 00       	nop
 2fe:	81 e8       	ldi	r24, 0x81	; 129
 300:	83 bd       	out	0x23, r24	; 35
 302:	88 eb       	ldi	r24, 0xB8	; 184
 304:	9b e0       	ldi	r25, 0x0B	; 11
 306:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 30a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 30e:	82 e0       	ldi	r24, 0x02	; 2
 310:	84 b9       	out	0x04, r24	; 4
 312:	a1 e8       	ldi	r26, 0x81	; 129
 314:	b0 e0       	ldi	r27, 0x00	; 0
 316:	1c 92       	st	X, r1
 318:	e0 e8       	ldi	r30, 0x80	; 128
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	80 83       	st	Z, r24
 320:	8c 91       	ld	r24, X
 322:	81 60       	ori	r24, 0x01	; 1
 324:	8c 93       	st	X, r24
 326:	80 81       	ld	r24, Z
 328:	80 6c       	ori	r24, 0xC0	; 192
 32a:	80 83       	st	Z, r24
 32c:	13 bc       	out	0x23, r1	; 35
 32e:	f8 94       	cli
 330:	e9 e6       	ldi	r30, 0x69	; 105
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	82 60       	ori	r24, 0x02	; 2
 338:	80 83       	st	Z, r24
 33a:	80 81       	ld	r24, Z
 33c:	8c 60       	ori	r24, 0x0C	; 12
 33e:	80 83       	st	Z, r24
 340:	8d b3       	in	r24, 0x1d	; 29
 342:	83 60       	ori	r24, 0x03	; 3
 344:	8d bb       	out	0x1d, r24	; 29
 346:	78 94       	sei
 348:	ff cf       	rjmp	.-2      	; 0x348 <main+0x68>

Disassembly of section .text.__vector_1:

000000e2 <__vector_1>:
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	2f 93       	push	r18
  ee:	3f 93       	push	r19
  f0:	4f 93       	push	r20
  f2:	5f 93       	push	r21
  f4:	6f 93       	push	r22
  f6:	7f 93       	push	r23
  f8:	8f 93       	push	r24
  fa:	9f 93       	push	r25
  fc:	af 93       	push	r26
  fe:	bf 93       	push	r27
 100:	ef 93       	push	r30
 102:	ff 93       	push	r31
 104:	64 ec       	ldi	r22, 0xC4	; 196
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	0e 94 a5 01 	call	0x34a	; 0x34a <ENVIA_CADENA>
 10e:	2f ef       	ldi	r18, 0xFF	; 255
 110:	83 ed       	ldi	r24, 0xD3	; 211
 112:	90 e3       	ldi	r25, 0x30	; 48
 114:	21 50       	subi	r18, 0x01	; 1
 116:	80 40       	sbci	r24, 0x00	; 0
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <__vector_1+0x32>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <__vector_1+0x3c>
 11e:	00 00       	nop
 120:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LIMPIA_LCD>
 124:	40 91 88 00 	lds	r20, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 128:	50 91 89 00 	lds	r21, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 12c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <step>
 130:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <step+0x1>
 134:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 138:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13c:	82 1b       	sub	r24, r18
 13e:	93 0b       	sbc	r25, r19
 140:	48 17       	cp	r20, r24
 142:	59 07       	cpc	r21, r25
 144:	40 f4       	brcc	.+16     	; 0x156 <__vector_1+0x74>
 146:	e8 e8       	ldi	r30, 0x88	; 136
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	91 81       	ldd	r25, Z+1	; 0x01
 14e:	28 0f       	add	r18, r24
 150:	39 1f       	adc	r19, r25
 152:	31 83       	std	Z+1, r19	; 0x01
 154:	20 83       	st	Z, r18
 156:	ff 91       	pop	r31
 158:	ef 91       	pop	r30
 15a:	bf 91       	pop	r27
 15c:	af 91       	pop	r26
 15e:	9f 91       	pop	r25
 160:	8f 91       	pop	r24
 162:	7f 91       	pop	r23
 164:	6f 91       	pop	r22
 166:	5f 91       	pop	r21
 168:	4f 91       	pop	r20
 16a:	3f 91       	pop	r19
 16c:	2f 91       	pop	r18
 16e:	0f 90       	pop	r0
 170:	0f be       	out	0x3f, r0	; 63
 172:	0f 90       	pop	r0
 174:	1f 90       	pop	r1
 176:	18 95       	reti

Disassembly of section .text.__vector_2:

00000178 <__vector_2>:
 178:	1f 92       	push	r1
 17a:	0f 92       	push	r0
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	0f 92       	push	r0
 180:	11 24       	eor	r1, r1
 182:	2f 93       	push	r18
 184:	3f 93       	push	r19
 186:	4f 93       	push	r20
 188:	5f 93       	push	r21
 18a:	6f 93       	push	r22
 18c:	7f 93       	push	r23
 18e:	8f 93       	push	r24
 190:	9f 93       	push	r25
 192:	af 93       	push	r26
 194:	bf 93       	push	r27
 196:	ef 93       	push	r30
 198:	ff 93       	push	r31
 19a:	63 ed       	ldi	r22, 0xD3	; 211
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	0e 94 a5 01 	call	0x34a	; 0x34a <ENVIA_CADENA>
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	43 ed       	ldi	r20, 0xD3	; 211
 1a8:	50 e3       	ldi	r21, 0x30	; 48
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	40 40       	sbci	r20, 0x00	; 0
 1ae:	50 40       	sbci	r21, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <__vector_2+0x32>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <__vector_2+0x3c>
 1b4:	00 00       	nop
 1b6:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LIMPIA_LCD>
 1ba:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1be:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1c2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step>
 1c6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step+0x1>
 1ca:	82 17       	cp	r24, r18
 1cc:	93 07       	cpc	r25, r19
 1ce:	48 f4       	brcc	.+18     	; 0x1e2 <__vector_2+0x6a>
 1d0:	e8 e8       	ldi	r30, 0x88	; 136
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	20 81       	ld	r18, Z
 1d6:	31 81       	ldd	r19, Z+1	; 0x01
 1d8:	a9 01       	movw	r20, r18
 1da:	48 1b       	sub	r20, r24
 1dc:	59 0b       	sbc	r21, r25
 1de:	51 83       	std	Z+1, r21	; 0x01
 1e0:	40 83       	st	Z, r20
 1e2:	ff 91       	pop	r31
 1e4:	ef 91       	pop	r30
 1e6:	bf 91       	pop	r27
 1e8:	af 91       	pop	r26
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	7f 91       	pop	r23
 1f0:	6f 91       	pop	r22
 1f2:	5f 91       	pop	r21
 1f4:	4f 91       	pop	r20
 1f6:	3f 91       	pop	r19
 1f8:	2f 91       	pop	r18
 1fa:	0f 90       	pop	r0
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	0f 90       	pop	r0
 200:	1f 90       	pop	r1
 202:	18 95       	reti
