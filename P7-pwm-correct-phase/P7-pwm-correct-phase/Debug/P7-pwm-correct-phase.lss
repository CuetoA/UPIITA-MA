
P7-pwm-correct-phase.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003a6  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000003a6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000d8  00000000  00000000  000003d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001d0b  00000000  00000000  000004ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000769  00000000  00000000  000021b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000008bc  00000000  00000000  00002921  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000025c  00000000  00000000  000031e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000211  00000000  00000000  0000343c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000012fa  00000000  00000000  0000364d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c8  00000000  00000000  00004947  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000034e  0000034e  000003a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004a10  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.ENVIA_CMD 0000006e  000001b2  000001b2  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.LCD_INICIALIZA 00000026  00000320  00000320  00000374  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ENVIA_DATO 0000006e  00000220  00000220  00000274  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ENVIA_CADENA 00000040  000002e0  000002e0  00000334  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LIMPIA_LCD 00000008  00000346  00000346  0000039a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    00000052  0000028e  0000028e  000002e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 00000016  000000bc  000000bc  00000110  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.__vector_1 00000070  000000d2  000000d2  00000126  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_2 00000070  00000142  00000142  00000196  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__vector_1>
   8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__vector_2>
   c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  10:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  14:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  18:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  1c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  20:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  24:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  28:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  2c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  30:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  34:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  38:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  3c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  40:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  44:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  48:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  4c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  50:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  54:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  58:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  5c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  60:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>
  64:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	e8 e6       	ldi	r30, 0x68	; 104
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	40 e0       	ldi	r20, 0x00	; 0
  7a:	17 c0       	rjmp	.+46     	; 0xaa <__do_clear_bss+0x8>
  7c:	b5 91       	lpm	r27, Z+
  7e:	a5 91       	lpm	r26, Z+
  80:	35 91       	lpm	r19, Z+
  82:	25 91       	lpm	r18, Z+
  84:	05 91       	lpm	r16, Z+
  86:	07 fd       	sbrc	r16, 7
  88:	0c c0       	rjmp	.+24     	; 0xa2 <__do_clear_bss>
  8a:	95 91       	lpm	r25, Z+
  8c:	85 91       	lpm	r24, Z+
  8e:	ef 01       	movw	r28, r30
  90:	f9 2f       	mov	r31, r25
  92:	e8 2f       	mov	r30, r24
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0x20>
  9e:	fe 01       	movw	r30, r28
  a0:	04 c0       	rjmp	.+8      	; 0xaa <__do_clear_bss+0x8>

000000a2 <__do_clear_bss>:
  a2:	1d 92       	st	X+, r1
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	e1 f7       	brne	.-8      	; 0xa2 <__do_clear_bss>
  aa:	e8 36       	cpi	r30, 0x68	; 104
  ac:	f4 07       	cpc	r31, r20
  ae:	31 f7       	brne	.-52     	; 0x7c <__do_copy_data+0x8>
  b0:	0e 94 47 01 	call	0x28e	; 0x28e <main>
  b4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <_exit>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>

Disassembly of section .text:

0000034e <__bad_interrupt>:
 34e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ENVIA_CMD:

000001b2 <ENVIA_CMD>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b2:	98 2f       	mov	r25, r24
 1b4:	90 7f       	andi	r25, 0xF0	; 240
 1b6:	96 95       	lsr	r25
 1b8:	96 95       	lsr	r25
 1ba:	98 b9       	out	0x08, r25	; 8
 1bc:	98 b1       	in	r25, 0x08	; 8
 1be:	9e 7f       	andi	r25, 0xFE	; 254
 1c0:	98 b9       	out	0x08, r25	; 8
 1c2:	98 b1       	in	r25, 0x08	; 8
 1c4:	92 60       	ori	r25, 0x02	; 2
 1c6:	98 b9       	out	0x08, r25	; 8
 1c8:	ef e9       	ldi	r30, 0x9F	; 159
 1ca:	ff e0       	ldi	r31, 0x0F	; 15
 1cc:	31 97       	sbiw	r30, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <ENVIA_CMD+0x1a>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <ENVIA_CMD+0x20>
 1d2:	00 00       	nop
 1d4:	98 b1       	in	r25, 0x08	; 8
 1d6:	9d 7f       	andi	r25, 0xFD	; 253
 1d8:	98 b9       	out	0x08, r25	; 8
 1da:	ef e3       	ldi	r30, 0x3F	; 63
 1dc:	fc e9       	ldi	r31, 0x9C	; 156
 1de:	31 97       	sbiw	r30, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <ENVIA_CMD+0x2c>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <ENVIA_CMD+0x32>
 1e4:	00 00       	nop
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	8c 73       	andi	r24, 0x3C	; 60
 1f2:	88 b9       	out	0x08, r24	; 8
 1f4:	88 b1       	in	r24, 0x08	; 8
 1f6:	8e 7f       	andi	r24, 0xFE	; 254
 1f8:	88 b9       	out	0x08, r24	; 8
 1fa:	88 b1       	in	r24, 0x08	; 8
 1fc:	82 60       	ori	r24, 0x02	; 2
 1fe:	88 b9       	out	0x08, r24	; 8
 200:	8f e9       	ldi	r24, 0x9F	; 159
 202:	9f e0       	ldi	r25, 0x0F	; 15
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <ENVIA_CMD+0x52>
 208:	00 c0       	rjmp	.+0      	; 0x20a <ENVIA_CMD+0x58>
 20a:	00 00       	nop
 20c:	88 b1       	in	r24, 0x08	; 8
 20e:	8d 7f       	andi	r24, 0xFD	; 253
 210:	88 b9       	out	0x08, r24	; 8
 212:	ef e3       	ldi	r30, 0x3F	; 63
 214:	fc e9       	ldi	r31, 0x9C	; 156
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <ENVIA_CMD+0x64>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <ENVIA_CMD+0x6a>
 21c:	00 00       	nop
 21e:	08 95       	ret

Disassembly of section .text.LCD_INICIALIZA:

00000320 <LCD_INICIALIZA>:
}


void LCD_INICIALIZA()
{
	ENVIA_CMD(0x02);
 320:	82 e0       	ldi	r24, 0x02	; 2
 322:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
	ENVIA_CMD(0x28); // 00101000 DL = 0 comunicacion de 4 bits N = 1 F = 0
 326:	88 e2       	ldi	r24, 0x28	; 40
 328:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
	ENVIA_CMD(0x0E); // D=1 Display ON Cursor OFF
 32c:	8e e0       	ldi	r24, 0x0E	; 14
 32e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
	ENVIA_CMD(0x06); // I/D = 1 Incremento Automatico S=0
 332:	86 e0       	ldi	r24, 0x06	; 6
 334:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
	ENVIA_CMD(0x01);  // Limpia LCD
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
	ENVIA_CMD(0X80);
 33e:	80 e8       	ldi	r24, 0x80	; 128
 340:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
 344:	08 95       	ret

Disassembly of section .text.ENVIA_DATO:

00000220 <ENVIA_DATO>:
 220:	98 2f       	mov	r25, r24
 222:	90 7f       	andi	r25, 0xF0	; 240
 224:	96 95       	lsr	r25
 226:	96 95       	lsr	r25
 228:	98 b9       	out	0x08, r25	; 8
 22a:	98 b1       	in	r25, 0x08	; 8
 22c:	93 60       	ori	r25, 0x03	; 3
 22e:	98 b9       	out	0x08, r25	; 8
 230:	ef e9       	ldi	r30, 0x9F	; 159
 232:	ff e0       	ldi	r31, 0x0F	; 15
 234:	31 97       	sbiw	r30, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <ENVIA_DATO+0x14>
 238:	00 c0       	rjmp	.+0      	; 0x23a <ENVIA_DATO+0x1a>
 23a:	00 00       	nop
 23c:	98 b1       	in	r25, 0x08	; 8
 23e:	9d 7f       	andi	r25, 0xFD	; 253
 240:	98 b9       	out	0x08, r25	; 8
 242:	98 b1       	in	r25, 0x08	; 8
 244:	9e 7f       	andi	r25, 0xFE	; 254
 246:	98 b9       	out	0x08, r25	; 8
 248:	ef e3       	ldi	r30, 0x3F	; 63
 24a:	fc e9       	ldi	r31, 0x9C	; 156
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <ENVIA_DATO+0x2c>
 250:	00 c0       	rjmp	.+0      	; 0x252 <ENVIA_DATO+0x32>
 252:	00 00       	nop
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	8c 73       	andi	r24, 0x3C	; 60
 260:	88 b9       	out	0x08, r24	; 8
 262:	88 b1       	in	r24, 0x08	; 8
 264:	83 60       	ori	r24, 0x03	; 3
 266:	88 b9       	out	0x08, r24	; 8
 268:	8f e9       	ldi	r24, 0x9F	; 159
 26a:	9f e0       	ldi	r25, 0x0F	; 15
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <ENVIA_DATO+0x4c>
 270:	00 c0       	rjmp	.+0      	; 0x272 <ENVIA_DATO+0x52>
 272:	00 00       	nop
 274:	88 b1       	in	r24, 0x08	; 8
 276:	8d 7f       	andi	r24, 0xFD	; 253
 278:	88 b9       	out	0x08, r24	; 8
 27a:	88 b1       	in	r24, 0x08	; 8
 27c:	8e 7f       	andi	r24, 0xFE	; 254
 27e:	88 b9       	out	0x08, r24	; 8
 280:	ef e3       	ldi	r30, 0x3F	; 63
 282:	fc e9       	ldi	r31, 0x9C	; 156
 284:	31 97       	sbiw	r30, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <ENVIA_DATO+0x64>
 288:	00 c0       	rjmp	.+0      	; 0x28a <ENVIA_DATO+0x6a>
 28a:	00 00       	nop
 28c:	08 95       	ret

Disassembly of section .text.ENVIA_CADENA:

000002e0 <ENVIA_CADENA>:
	_delay_ms(10);
	return;
}

void ENVIA_CADENA(const char *dato)
{
 2e0:	cf 92       	push	r12
 2e2:	df 92       	push	r13
 2e4:	ef 92       	push	r14
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	6b 01       	movw	r12, r22
 2ec:	e8 2e       	mov	r14, r24
	int i;
	for(i=0;dato[i]!='\0';i++)
 2ee:	c0 e0       	ldi	r28, 0x00	; 0
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	03 c0       	rjmp	.+6      	; 0x2fa <ENVIA_CADENA+0x1a>
	ENVIA_DATO(dato[i]);
 2f4:	0e 94 10 01 	call	0x220	; 0x220 <ENVIA_DATO>
}

void ENVIA_CADENA(const char *dato)
{
	int i;
	for(i=0;dato[i]!='\0';i++)
 2f8:	21 96       	adiw	r28, 0x01	; 1
 2fa:	ae 2d       	mov	r26, r14
 2fc:	c6 01       	movw	r24, r12
 2fe:	8c 0f       	add	r24, r28
 300:	9d 1f       	adc	r25, r29
 302:	a1 1d       	adc	r26, r1
 304:	d7 fd       	sbrc	r29, 7
 306:	aa 95       	dec	r26
 308:	fc 01       	movw	r30, r24
 30a:	84 91       	lpm	r24, Z
 30c:	a7 fd       	sbrc	r26, 7
 30e:	80 81       	ld	r24, Z
 310:	81 11       	cpse	r24, r1
 312:	f0 cf       	rjmp	.-32     	; 0x2f4 <ENVIA_CADENA+0x14>
	ENVIA_DATO(dato[i]);
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	ef 90       	pop	r14
 31a:	df 90       	pop	r13
 31c:	cf 90       	pop	r12
 31e:	08 95       	ret

Disassembly of section .text.LIMPIA_LCD:

00000346 <LIMPIA_LCD>:

void LIMPIA_LCD()
{
	ENVIA_CMD(0x1);   //0000 0001
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <ENVIA_CMD>
 34c:	08 95       	ret

Disassembly of section .text.main:

0000028e <main>:
 28e:	8c e0       	ldi	r24, 0x0C	; 12
 290:	8a b9       	out	0x0a, r24	; 10
 292:	8b b9       	out	0x0b, r24	; 11
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	87 b9       	out	0x07, r24	; 7
 298:	0e 94 90 01 	call	0x320	; 0x320 <LCD_INICIALIZA>
 29c:	2f ef       	ldi	r18, 0xFF	; 255
 29e:	80 e7       	ldi	r24, 0x70	; 112
 2a0:	92 e0       	ldi	r25, 0x02	; 2
 2a2:	21 50       	subi	r18, 0x01	; 1
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	90 40       	sbci	r25, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0x14>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0x1e>
 2ac:	00 00       	nop
 2ae:	81 e8       	ldi	r24, 0x81	; 129
 2b0:	83 bd       	out	0x23, r24	; 35
 2b2:	8a ef       	ldi	r24, 0xFA	; 250
 2b4:	87 bd       	out	0x27, r24	; 39
 2b6:	80 e4       	ldi	r24, 0x40	; 64
 2b8:	8a b9       	out	0x0a, r24	; 10
 2ba:	88 e0       	ldi	r24, 0x08	; 8
 2bc:	85 bd       	out	0x25, r24	; 37
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	84 bd       	out	0x24, r24	; 36
 2c2:	13 bc       	out	0x23, r1	; 35
 2c4:	f8 94       	cli
 2c6:	e9 e6       	ldi	r30, 0x69	; 105
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	82 60       	ori	r24, 0x02	; 2
 2ce:	80 83       	st	Z, r24
 2d0:	80 81       	ld	r24, Z
 2d2:	8c 60       	ori	r24, 0x0C	; 12
 2d4:	80 83       	st	Z, r24
 2d6:	8d b3       	in	r24, 0x1d	; 29
 2d8:	83 60       	ori	r24, 0x03	; 3
 2da:	8d bb       	out	0x1d, r24	; 29
 2dc:	78 94       	sei
 2de:	ff cf       	rjmp	.-2      	; 0x2de <main+0x50>

Disassembly of section .text.__vector_1:

000000d2 <__vector_1>:
  d2:	1f 92       	push	r1
  d4:	0f 92       	push	r0
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	0f 92       	push	r0
  da:	11 24       	eor	r1, r1
  dc:	2f 93       	push	r18
  de:	3f 93       	push	r19
  e0:	4f 93       	push	r20
  e2:	5f 93       	push	r21
  e4:	6f 93       	push	r22
  e6:	7f 93       	push	r23
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
  ec:	af 93       	push	r26
  ee:	bf 93       	push	r27
  f0:	ef 93       	push	r30
  f2:	ff 93       	push	r31
  f4:	6c eb       	ldi	r22, 0xBC	; 188
  f6:	70 e0       	ldi	r23, 0x00	; 0
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	0e 94 70 01 	call	0x2e0	; 0x2e0 <ENVIA_CADENA>
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	83 ed       	ldi	r24, 0xD3	; 211
 102:	90 e3       	ldi	r25, 0x30	; 48
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <__vector_1+0x32>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <__vector_1+0x3c>
 10e:	00 00       	nop
 110:	0e 94 a3 01 	call	0x346	; 0x346 <LIMPIA_LCD>
 114:	87 b5       	in	r24, 0x27	; 39
 116:	8d 3c       	cpi	r24, 0xCD	; 205
 118:	18 f4       	brcc	.+6      	; 0x120 <__vector_1+0x4e>
 11a:	87 b5       	in	r24, 0x27	; 39
 11c:	8e 5c       	subi	r24, 0xCE	; 206
 11e:	87 bd       	out	0x27, r24	; 39
 120:	ff 91       	pop	r31
 122:	ef 91       	pop	r30
 124:	bf 91       	pop	r27
 126:	af 91       	pop	r26
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	7f 91       	pop	r23
 12e:	6f 91       	pop	r22
 130:	5f 91       	pop	r21
 132:	4f 91       	pop	r20
 134:	3f 91       	pop	r19
 136:	2f 91       	pop	r18
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

Disassembly of section .text.__vector_2:

00000142 <__vector_2>:
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	2f 93       	push	r18
 14e:	3f 93       	push	r19
 150:	4f 93       	push	r20
 152:	5f 93       	push	r21
 154:	6f 93       	push	r22
 156:	7f 93       	push	r23
 158:	8f 93       	push	r24
 15a:	9f 93       	push	r25
 15c:	af 93       	push	r26
 15e:	bf 93       	push	r27
 160:	ef 93       	push	r30
 162:	ff 93       	push	r31
 164:	67 ec       	ldi	r22, 0xC7	; 199
 166:	70 e0       	ldi	r23, 0x00	; 0
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <ENVIA_CADENA>
 16e:	2f ef       	ldi	r18, 0xFF	; 255
 170:	83 ed       	ldi	r24, 0xD3	; 211
 172:	90 e3       	ldi	r25, 0x30	; 48
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <__vector_2+0x32>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <__vector_2+0x3c>
 17e:	00 00       	nop
 180:	0e 94 a3 01 	call	0x346	; 0x346 <LIMPIA_LCD>
 184:	87 b5       	in	r24, 0x27	; 39
 186:	83 33       	cpi	r24, 0x33	; 51
 188:	18 f0       	brcs	.+6      	; 0x190 <__vector_2+0x4e>
 18a:	87 b5       	in	r24, 0x27	; 39
 18c:	82 53       	subi	r24, 0x32	; 50
 18e:	87 bd       	out	0x27, r24	; 39
 190:	ff 91       	pop	r31
 192:	ef 91       	pop	r30
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	7f 91       	pop	r23
 19e:	6f 91       	pop	r22
 1a0:	5f 91       	pop	r21
 1a2:	4f 91       	pop	r20
 1a4:	3f 91       	pop	r19
 1a6:	2f 91       	pop	r18
 1a8:	0f 90       	pop	r0
 1aa:	0f be       	out	0x3f, r0	; 63
 1ac:	0f 90       	pop	r0
 1ae:	1f 90       	pop	r1
 1b0:	18 95       	reti
