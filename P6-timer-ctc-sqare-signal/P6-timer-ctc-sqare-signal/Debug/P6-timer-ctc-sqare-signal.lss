
P6-timer-ctc-sqare-signal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000370  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000d8  00000000  00000000  0000039f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001cb9  00000000  00000000  00000477  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000076e  00000000  00000000  00002130  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000008a8  00000000  00000000  0000289e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000025c  00000000  00000000  00003148  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000211  00000000  00000000  000033a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000012b2  00000000  00000000  000035b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c8  00000000  00000000  00004867  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000002f8  000002f8  0000036c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004930  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.ENVIA_CMD 0000006e  00000190  00000190  00000204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.ENVIA_DATO 0000006e  000001fe  000001fe  00000272  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ENVIA_CADENA 00000040  000002b0  000002b0  00000324  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LIMPIA_LCD 00000008  000002f0  000002f0  00000364  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000044  0000026c  0000026c  000002e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .progmemx.data 00000011  00000080  00000080  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.__vector_1 00000080  00000092  00000092  00000106  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__vector_2 0000007e  00000112  00000112  00000186  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_1>
   8:	0c 94 89 00 	jmp	0x112	; 0x112 <__vector_2>
   c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  10:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  14:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  18:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  1c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  20:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  24:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  28:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  2c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  30:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  34:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  38:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  3c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  40:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  44:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  48:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  4c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  50:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  54:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  58:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  5c:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  60:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>
  64:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 36 01 	call	0x26c	; 0x26c <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

000002f8 <__bad_interrupt>:
 2f8:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ENVIA_CMD:

00000190 <ENVIA_CMD>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 190:	98 2f       	mov	r25, r24
 192:	90 7f       	andi	r25, 0xF0	; 240
 194:	96 95       	lsr	r25
 196:	96 95       	lsr	r25
 198:	98 b9       	out	0x08, r25	; 8
 19a:	98 b1       	in	r25, 0x08	; 8
 19c:	9e 7f       	andi	r25, 0xFE	; 254
 19e:	98 b9       	out	0x08, r25	; 8
 1a0:	98 b1       	in	r25, 0x08	; 8
 1a2:	92 60       	ori	r25, 0x02	; 2
 1a4:	98 b9       	out	0x08, r25	; 8
 1a6:	ef e9       	ldi	r30, 0x9F	; 159
 1a8:	ff e0       	ldi	r31, 0x0F	; 15
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <ENVIA_CMD+0x1a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <ENVIA_CMD+0x20>
 1b0:	00 00       	nop
 1b2:	98 b1       	in	r25, 0x08	; 8
 1b4:	9d 7f       	andi	r25, 0xFD	; 253
 1b6:	98 b9       	out	0x08, r25	; 8
 1b8:	ef e3       	ldi	r30, 0x3F	; 63
 1ba:	fc e9       	ldi	r31, 0x9C	; 156
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <ENVIA_CMD+0x2c>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <ENVIA_CMD+0x32>
 1c2:	00 00       	nop
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	8c 73       	andi	r24, 0x3C	; 60
 1d0:	88 b9       	out	0x08, r24	; 8
 1d2:	88 b1       	in	r24, 0x08	; 8
 1d4:	8e 7f       	andi	r24, 0xFE	; 254
 1d6:	88 b9       	out	0x08, r24	; 8
 1d8:	88 b1       	in	r24, 0x08	; 8
 1da:	82 60       	ori	r24, 0x02	; 2
 1dc:	88 b9       	out	0x08, r24	; 8
 1de:	8f e9       	ldi	r24, 0x9F	; 159
 1e0:	9f e0       	ldi	r25, 0x0F	; 15
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <ENVIA_CMD+0x52>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <ENVIA_CMD+0x58>
 1e8:	00 00       	nop
 1ea:	88 b1       	in	r24, 0x08	; 8
 1ec:	8d 7f       	andi	r24, 0xFD	; 253
 1ee:	88 b9       	out	0x08, r24	; 8
 1f0:	ef e3       	ldi	r30, 0x3F	; 63
 1f2:	fc e9       	ldi	r31, 0x9C	; 156
 1f4:	31 97       	sbiw	r30, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <ENVIA_CMD+0x64>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <ENVIA_CMD+0x6a>
 1fa:	00 00       	nop
 1fc:	08 95       	ret

Disassembly of section .text.ENVIA_DATO:

000001fe <ENVIA_DATO>:
 1fe:	98 2f       	mov	r25, r24
 200:	90 7f       	andi	r25, 0xF0	; 240
 202:	96 95       	lsr	r25
 204:	96 95       	lsr	r25
 206:	98 b9       	out	0x08, r25	; 8
 208:	98 b1       	in	r25, 0x08	; 8
 20a:	93 60       	ori	r25, 0x03	; 3
 20c:	98 b9       	out	0x08, r25	; 8
 20e:	ef e9       	ldi	r30, 0x9F	; 159
 210:	ff e0       	ldi	r31, 0x0F	; 15
 212:	31 97       	sbiw	r30, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <ENVIA_DATO+0x14>
 216:	00 c0       	rjmp	.+0      	; 0x218 <ENVIA_DATO+0x1a>
 218:	00 00       	nop
 21a:	98 b1       	in	r25, 0x08	; 8
 21c:	9d 7f       	andi	r25, 0xFD	; 253
 21e:	98 b9       	out	0x08, r25	; 8
 220:	98 b1       	in	r25, 0x08	; 8
 222:	9e 7f       	andi	r25, 0xFE	; 254
 224:	98 b9       	out	0x08, r25	; 8
 226:	ef e3       	ldi	r30, 0x3F	; 63
 228:	fc e9       	ldi	r31, 0x9C	; 156
 22a:	31 97       	sbiw	r30, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <ENVIA_DATO+0x2c>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <ENVIA_DATO+0x32>
 230:	00 00       	nop
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	8c 73       	andi	r24, 0x3C	; 60
 23e:	88 b9       	out	0x08, r24	; 8
 240:	88 b1       	in	r24, 0x08	; 8
 242:	83 60       	ori	r24, 0x03	; 3
 244:	88 b9       	out	0x08, r24	; 8
 246:	8f e9       	ldi	r24, 0x9F	; 159
 248:	9f e0       	ldi	r25, 0x0F	; 15
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <ENVIA_DATO+0x4c>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <ENVIA_DATO+0x52>
 250:	00 00       	nop
 252:	88 b1       	in	r24, 0x08	; 8
 254:	8d 7f       	andi	r24, 0xFD	; 253
 256:	88 b9       	out	0x08, r24	; 8
 258:	88 b1       	in	r24, 0x08	; 8
 25a:	8e 7f       	andi	r24, 0xFE	; 254
 25c:	88 b9       	out	0x08, r24	; 8
 25e:	ef e3       	ldi	r30, 0x3F	; 63
 260:	fc e9       	ldi	r31, 0x9C	; 156
 262:	31 97       	sbiw	r30, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <ENVIA_DATO+0x64>
 266:	00 c0       	rjmp	.+0      	; 0x268 <ENVIA_DATO+0x6a>
 268:	00 00       	nop
 26a:	08 95       	ret

Disassembly of section .text.ENVIA_CADENA:

000002b0 <ENVIA_CADENA>:
	_delay_ms(10);
	return;
}

void ENVIA_CADENA(const char *dato)
{
 2b0:	cf 92       	push	r12
 2b2:	df 92       	push	r13
 2b4:	ef 92       	push	r14
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	6b 01       	movw	r12, r22
 2bc:	e8 2e       	mov	r14, r24
	int i;
	for(i=0;dato[i]!='\0';i++)
 2be:	c0 e0       	ldi	r28, 0x00	; 0
 2c0:	d0 e0       	ldi	r29, 0x00	; 0
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <ENVIA_CADENA+0x1a>
	ENVIA_DATO(dato[i]);
 2c4:	0e 94 ff 00 	call	0x1fe	; 0x1fe <ENVIA_DATO>
}

void ENVIA_CADENA(const char *dato)
{
	int i;
	for(i=0;dato[i]!='\0';i++)
 2c8:	21 96       	adiw	r28, 0x01	; 1
 2ca:	ae 2d       	mov	r26, r14
 2cc:	c6 01       	movw	r24, r12
 2ce:	8c 0f       	add	r24, r28
 2d0:	9d 1f       	adc	r25, r29
 2d2:	a1 1d       	adc	r26, r1
 2d4:	d7 fd       	sbrc	r29, 7
 2d6:	aa 95       	dec	r26
 2d8:	fc 01       	movw	r30, r24
 2da:	84 91       	lpm	r24, Z
 2dc:	a7 fd       	sbrc	r26, 7
 2de:	80 81       	ld	r24, Z
 2e0:	81 11       	cpse	r24, r1
 2e2:	f0 cf       	rjmp	.-32     	; 0x2c4 <ENVIA_CADENA+0x14>
	ENVIA_DATO(dato[i]);
}
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	ef 90       	pop	r14
 2ea:	df 90       	pop	r13
 2ec:	cf 90       	pop	r12
 2ee:	08 95       	ret

Disassembly of section .text.LIMPIA_LCD:

000002f0 <LIMPIA_LCD>:

void LIMPIA_LCD()
{
	ENVIA_CMD(0x1);   //0000 0001
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 c8 00 	call	0x190	; 0x190 <ENVIA_CMD>
 2f6:	08 95       	ret

Disassembly of section .text.main:

0000026c <main>:
 26c:	f8 94       	cli
 26e:	1a b8       	out	0x0a, r1	; 10
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	8b b9       	out	0x0b, r24	; 11
 274:	81 e8       	ldi	r24, 0x81	; 129
 276:	83 bd       	out	0x23, r24	; 35
 278:	88 ec       	ldi	r24, 0xC8	; 200
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 280:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 284:	82 e0       	ldi	r24, 0x02	; 2
 286:	84 b9       	out	0x04, r24	; 4
 288:	80 e4       	ldi	r24, 0x40	; 64
 28a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 28e:	8c e0       	ldi	r24, 0x0C	; 12
 290:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 294:	e9 e6       	ldi	r30, 0x69	; 105
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	82 60       	ori	r24, 0x02	; 2
 29c:	80 83       	st	Z, r24
 29e:	80 81       	ld	r24, Z
 2a0:	88 60       	ori	r24, 0x08	; 8
 2a2:	80 83       	st	Z, r24
 2a4:	8d b3       	in	r24, 0x1d	; 29
 2a6:	83 60       	ori	r24, 0x03	; 3
 2a8:	8d bb       	out	0x1d, r24	; 29
 2aa:	13 bc       	out	0x23, r1	; 35
 2ac:	78 94       	sei
 2ae:	ff cf       	rjmp	.-2      	; 0x2ae <main+0x42>

Disassembly of section .text.__vector_1:

00000092 <__vector_1>:
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
  b4:	0e 94 78 01 	call	0x2f0	; 0x2f0 <LIMPIA_LCD>
  b8:	60 e8       	ldi	r22, 0x80	; 128
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	0e 94 58 01 	call	0x2b0	; 0x2b0 <ENVIA_CADENA>
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	89 e6       	ldi	r24, 0x69	; 105
  c6:	98 e1       	ldi	r25, 0x18	; 24
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <__vector_1+0x36>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <__vector_1+0x40>
  d2:	00 00       	nop
  d4:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  d8:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  dc:	88 3c       	cpi	r24, 0xC8	; 200
  de:	91 05       	cpc	r25, r1
  e0:	38 f4       	brcc	.+14     	; 0xf0 <__vector_1+0x5e>
  e2:	e8 e8       	ldi	r30, 0x88	; 136
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	91 81       	ldd	r25, Z+1	; 0x01
  ea:	c2 96       	adiw	r24, 0x32	; 50
  ec:	91 83       	std	Z+1, r25	; 0x01
  ee:	80 83       	st	Z, r24
  f0:	ff 91       	pop	r31
  f2:	ef 91       	pop	r30
  f4:	bf 91       	pop	r27
  f6:	af 91       	pop	r26
  f8:	9f 91       	pop	r25
  fa:	8f 91       	pop	r24
  fc:	7f 91       	pop	r23
  fe:	6f 91       	pop	r22
 100:	5f 91       	pop	r21
 102:	4f 91       	pop	r20
 104:	3f 91       	pop	r19
 106:	2f 91       	pop	r18
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

Disassembly of section .text.__vector_2:

00000112 <__vector_2>:
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	2f 93       	push	r18
 11e:	3f 93       	push	r19
 120:	4f 93       	push	r20
 122:	5f 93       	push	r21
 124:	6f 93       	push	r22
 126:	7f 93       	push	r23
 128:	8f 93       	push	r24
 12a:	9f 93       	push	r25
 12c:	af 93       	push	r26
 12e:	bf 93       	push	r27
 130:	ef 93       	push	r30
 132:	ff 93       	push	r31
 134:	0e 94 78 01 	call	0x2f0	; 0x2f0 <LIMPIA_LCD>
 138:	68 e8       	ldi	r22, 0x88	; 136
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <ENVIA_CADENA>
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	89 e6       	ldi	r24, 0x69	; 105
 146:	98 e1       	ldi	r25, 0x18	; 24
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <__vector_2+0x36>
 150:	00 c0       	rjmp	.+0      	; 0x152 <__vector_2+0x40>
 152:	00 00       	nop
 154:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 158:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 15c:	c3 97       	sbiw	r24, 0x33	; 51
 15e:	38 f0       	brcs	.+14     	; 0x16e <__vector_2+0x5c>
 160:	e8 e8       	ldi	r30, 0x88	; 136
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	91 81       	ldd	r25, Z+1	; 0x01
 168:	c2 97       	sbiw	r24, 0x32	; 50
 16a:	91 83       	std	Z+1, r25	; 0x01
 16c:	80 83       	st	Z, r24
 16e:	ff 91       	pop	r31
 170:	ef 91       	pop	r30
 172:	bf 91       	pop	r27
 174:	af 91       	pop	r26
 176:	9f 91       	pop	r25
 178:	8f 91       	pop	r24
 17a:	7f 91       	pop	r23
 17c:	6f 91       	pop	r22
 17e:	5f 91       	pop	r21
 180:	4f 91       	pop	r20
 182:	3f 91       	pop	r19
 184:	2f 91       	pop	r18
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti
